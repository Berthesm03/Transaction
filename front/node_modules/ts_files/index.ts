// Définir des types pour les données du formulaire
interface FormData {
    num_compte_tel: string;
    nom_expediteur: string;
    montant: number;
    fournisseur: string;
    transaction: string;
    num_tel_destinataire: string;
    nom_destinataire: string;
}

// Récupérer les éléments du formulaire
const form = document.getElementById('form') as HTMLFormElement;
const numCompteTelInput = document.getElementById('num_compte_tel') as HTMLInputElement;
const nomExpediteurInput = document.getElementById('nom_expediteur') as HTMLInputElement;
const montantInput = document.getElementById('montant') as HTMLInputElement;
const fournisseurInput = document.getElementById('fournisseur') as HTMLInputElement;
const transactionInput = document.getElementById('transaction') as HTMLInputElement;
const numTelDestinataireInput = document.getElementById('num_tel_destinataire') as HTMLInputElement;
const nomDestinataireInput = document.getElementById('nom_destinataire') as HTMLInputElement;

// Ajouter un écouteur d'événement au formulaire pour valider les données
form.addEventListener('submit', (event) => {
    event.preventDefault();

    // Récupérer les valeurs des champs
    const formData: FormData = {
        num_compte_tel: numCompteTelInput.value,
        nom_expediteur: nomExpediteurInput.value,
        montant: parseInt(montantInput.value),
        fournisseur: fournisseurInput.value,
        transaction: transactionInput.value,
        num_tel_destinataire: numTelDestinataireInput.value,
        nom_destinataire: nomDestinataireInput.value
    };

    // Faire ici ce que vous voulez avec les données, par exemple envoyer une requête AJAX à l'API

    // Afficher une alerte pour montrer que le formulaire a été validé
    alert('Formulaire validé avec succès !');
});
